{"version":3,"file":"src_feed_Feeds_tsx.bundle.js","mappings":"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","sources":["webpack://gravity-web/./src/feed/Feeds.tsx"],"sourcesContent":["import { CategoryApis } from '@/category/apis';\nimport { InfiniteLoader, InfiniteLoaderRenderProps } from '@/common/components';\nimport { useHandler, useInfiniteData } from '@/common/hooks';\nimport { NotifyBanner } from '@/layout/NotifyBanner';\nimport ListLoading from '@/main/atoms/ListLoading';\nimport { Category, FeedItem, Visibility } from '@/main/entity';\nimport { PaginationParams } from '@/rest/types';\nimport { TargetApis } from '@/target/apis';\nimport { UpdateTargetPayload } from '@/target/types';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { FeedApis } from './apis';\nimport { FeedCard } from './FeedCard';\nimport { TransactionsFeedCardProps } from './FeedCard/TransactionsFeedCard';\nimport { LineItemDrawer, useLineItemDrawer } from './LineItemDrawer';\nimport { FeedMode } from './types';\n\ntype FeedsProps = Pick<TransactionsFeedCardProps, 'categoryRedirectHref'> & {\n  departmentId?: number;\n  mode?: FeedMode;\n  categoryId?: number;\n  vendorId?: number;\n};\n\nexport const Feeds = ({\n  departmentId,\n  mode,\n  categoryId,\n  vendorId,\n  categoryRedirectHref,\n}: FeedsProps) => {\n  const { isLineItemDrawerOpen, selectedLineItem, closeLineItemDrawer, feedId } =\n    useLineItemDrawer();\n\n  const {\n    data: feeds,\n    loadMore,\n    update: updateFeed,\n    delete: deleteFeed,\n  } = useInfiniteData((paginationParams: PaginationParams) =>\n    FeedApis.getList({ ...paginationParams, mode, departmentId, categoryId, vendorId }),\n  );\n\n  const { handle: updateCategory } = useHandler(CategoryApis.update);\n  const { handle: updateTarget } = useHandler(TargetApis.update);\n  const { handle: deleteTarget } = useHandler(TargetApis.delete);\n\n  const handleUpdateCategory = async (feed: FeedItem, category: Category) => {\n    const res = await updateCategory(category.id, category);\n\n    updateFeed(feed.id, { ...feed, category });\n\n    return res;\n  };\n\n  const handleUpdateTarget = async (\n    feed: FeedItem,\n    targetId: number,\n    target: UpdateTargetPayload,\n  ) => {\n    const res = await updateTarget(targetId, target);\n\n    updateFeed(feed.id, { ...feed, target: res });\n\n    return res;\n  };\n\n  const handleDeleteTarget = async (feed: FeedItem, targetId: number) => {\n    const res = await deleteTarget(targetId);\n\n    deleteFeed(feed.id);\n\n    return res;\n  };\n\n  const handleInsightDeleteSuccess = (id: number) => {\n    deleteFeed(id);\n  };\n\n  const renderInfiniteLoader = ({ isExhausted, anchorRef }: InfiniteLoaderRenderProps) => {\n    if (isExhausted && !feeds.length)\n      return (\n        <div className=\"pb-2 sm:pb-5 text-center\">\n          <svg\n            className=\"mx-auto h-8 w-8 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              vectorEffect=\"non-scaling-stroke\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm text-Gray-3\">No rollups now!</h3>\n        </div>\n      );\n\n    if (isExhausted && !!feeds.length)\n      return (\n        <p className={clsx('text-base text-center text-Neutral-4')}>\n          Add to your feed by\n          <Link to=\"/departments\" className=\"ml-1 text-Gray-3 underline\">\n            <u>following more teams</u>\n          </Link>\n          <span role=\"img\" aria-label=\"rocket\">\n            {' '}\n            ðŸš€\n          </span>\n        </p>\n      );\n\n    return <ListLoading ref={anchorRef} />;\n  };\n\n  return (\n    <div>\n      <LineItemDrawer\n        open={isLineItemDrawerOpen}\n        onClose={closeLineItemDrawer}\n        lineItem={selectedLineItem!}\n        feedId={feedId}\n      />\n      <ul className=\"space-y-4\">\n        {feeds.map((feed) => (\n          <FeedCard\n            key={feed.id}\n            feed={feed}\n            categoryRedirectHref={categoryRedirectHref}\n            onHideCategoryConfirm={() => {\n              handleUpdateCategory(feed, {\n                ...feed.category,\n                visibility: Visibility.HIDDEN,\n              });\n              NotifyBanner.info('You have hidden this line item!');\n            }}\n            onShowCategoryConfirm={() => {\n              handleUpdateCategory(feed, {\n                ...feed.category,\n                visibility: Visibility.VISIBLE,\n              });\n              NotifyBanner.info('You have unhidden this line item!');\n            }}\n            onDeleteTarget={(id) => handleDeleteTarget(feed, id)}\n            onUpdateTarget={(targetId, target) => handleUpdateTarget(feed, targetId, target)}\n            onInsightDeleteSuccess={() => handleInsightDeleteSuccess(feed.id)}\n          />\n        ))}\n      </ul>\n      <div className=\"mt-4\">\n        <InfiniteLoader mode=\"ON_SIGHT\" itemsPerLoad={5} onLoad={loadMore}>\n          {renderInfiniteLoader}\n        </InfiniteLoader>\n      </div>\n    </div>\n  );\n};\n"],"names":["CategoryApis","InfiniteLoader","useHandler","useInfiniteData","NotifyBanner","ListLoading","Visibility","TargetApis","clsx","Link","FeedApis","FeedCard","LineItemDrawer","useLineItemDrawer","Feeds","departmentId","mode","categoryId","vendorId","categoryRedirectHref","isLineItemDrawerOpen","selectedLineItem","closeLineItemDrawer","feedId","paginationParams","getList","feeds","data","loadMore","updateFeed","update","deleteFeed","delete","updateCategory","handle","updateTarget","deleteTarget","handleUpdateCategory","feed","category","id","res","handleUpdateTarget","targetId","target","handleDeleteTarget","handleInsightDeleteSuccess","renderInfiniteLoader","isExhausted","anchorRef","length","map","visibility","HIDDEN","info","VISIBLE"],"sourceRoot":""}