{"version":3,"file":"src_target_TargetCard_tsx-src_target_constants_ts-src_target_useTargets_ts.bundle.js","mappings":"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","sources":["webpack://gravity-web/./src/main/atoms/TargetFeedName/index.tsx","webpack://gravity-web/./src/target/TargetCard.tsx","webpack://gravity-web/./src/target/constants.ts","webpack://gravity-web/./src/target/useTargets.ts"],"sourcesContent":["import clsx from 'clsx';\nimport { getTargetName } from '@/main/utils';\nimport { Target } from '@/target/types';\nimport React from 'react';\n\nexport interface TargetFeedNameProps {\n  className?: string;\n  target: Target;\n}\n\nconst TargetFeedName: React.FC<TargetFeedNameProps> = ({ className = '', target }) => {\n  return (\n    <div className={clsx('group relative', className)}>\n      <p className=\"text-base text-primary text-left font-bold line-clamp-1 overflow-ellipsis\">\n        {getTargetName(target)}\n      </p>\n    </div>\n  );\n};\n\nexport default TargetFeedName;\n","import Loading from '@/common/atoms/Loading';\nimport { Avatar } from '@/common/components';\nimport { useHandler } from '@/common/hooks';\nimport { ClassName } from '@/common/types';\nimport { distanceToNow } from '@/common/utils';\nimport TargetFeedName from '@/main/atoms/TargetFeedName';\nimport TargetStatus from '@/main/atoms/TargetStatus';\nimport { OptionsButton } from '@/main/molecules';\nimport { getColorByText, getDisplayUsdAmount, getTargetPeriodsAmountTotal } from '@/main/utils';\nimport { Routes } from '@/routing/routes';\nimport { SpendingChart } from '@/spending/SpendingChart';\nimport { useDisclosure } from '@dwarvesf/react-hooks';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { AddTargetModal, AddTargetModalProps } from './AddTargetModal';\nimport { AddTargetModalWithDefaultApisProps } from './AddTargetModal/AddTargetModal';\nimport { TargetApis } from './apis';\nimport { Target } from './types';\n\nexport type TargetCardProps = ClassName &\n  Required<Pick<AddTargetModalWithDefaultApisProps, 'onUpdateSuccess' | 'onDeleteSuccess'>> &\n  Pick<AddTargetModalProps, 'hidePropertyDropdowns'> & {\n    target: Target;\n    showColorfulHeading?: boolean;\n    deletable?: boolean;\n    chartContainerClass?: string;\n    href: string;\n  };\n\nexport const TargetCard = ({\n  target,\n  href,\n  className,\n  onUpdateSuccess,\n  onDeleteSuccess,\n  showColorfulHeading = true,\n  hidePropertyDropdowns,\n  deletable = true,\n  chartContainerClass = 'flex-1',\n}: TargetCardProps) => {\n  const history = useHistory();\n  const department = target?.department;\n  const addTargetModalDisclosure = useDisclosure();\n  const { overallTarget = 0, currentSpend = 0, targetToDate } = getTargetPeriodsAmountTotal(target);\n\n  const { isLoading: isDeletingTarget, handle: deleteTarget } = useHandler((targetId: number) =>\n    TargetApis.delete(targetId),\n  );\n\n  const goToTargetDetails = () => {\n    history.push(`${(Routes.Feed.path as string).replace(':id', `${target?.feedItem?.id}`)}`);\n  };\n\n  const handleSetTarget = (e: React.MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => {\n    addTargetModalDisclosure.onOpen();\n    e.stopPropagation();\n  };\n\n  const teamHeaderColor: string = React.useMemo(\n    () => getColorByText(department?.name ?? '', department?.id, true),\n    [department?.id, department?.name],\n  );\n\n  const handleDeleteClick = async () => {\n    await deleteTarget(target?.id);\n    onDeleteSuccess(target?.id);\n  };\n\n  return (\n    <>\n      <AddTargetModal\n        open={addTargetModalDisclosure.isOpen}\n        onClose={addTargetModalDisclosure.onClose}\n        onCancel={addTargetModalDisclosure.onClose}\n        target={target}\n        departmentId={department?.id}\n        onUpdateSuccess={onUpdateSuccess}\n        onDeleteSuccess={onDeleteSuccess}\n        hidePropertyDropdowns={hidePropertyDropdowns}\n      />\n      <Link\n        to={href}\n        key={target?.id}\n        className={clsx(\n          'bg-white relative w-full rounded-card shadow-card hover:shadow-target-hover flex flex-col border border-transparent hover:border-Accent-4',\n          className,\n        )}\n      >\n        <div className=\"flex flex-1 flex-col pb-4 space-y-2 w-full\">\n          <div\n            style={{ background: showColorfulHeading ? teamHeaderColor : undefined }}\n            className=\"h-2 rounded-t-card\"\n          />\n          <div className=\"flex flex-col px-6 space-y-4\">\n            <div className=\"flex flex-row space-x-1\">\n              <div className=\"flex flex-col flex-1 h-12 max-h-12\">\n                <div className=\"flex justify-between items-center h-6\">\n                  <TargetFeedName target={target} />\n                  <OptionsButton\n                    onViewClick={goToTargetDetails}\n                    onEditClick={addTargetModalDisclosure.onOpen}\n                    onDeleteClick={!target?.isPrimary && deletable ? handleDeleteClick : undefined}\n                    className=\"hidden md:block\"\n                  />\n                </div>\n                <div className=\"flex items-center gap-2 h-6 max-h-6 mt-2\">\n                  <Avatar\n                    size=\"sm\"\n                    fullName={target.updater?.fullName ?? ''}\n                    src={target.updater?.avatar}\n                    showTooltip\n                  />\n                  <span className=\"text-Gray-6 text-xs\">\n                    Last edited {distanceToNow(target?.updatedAt)}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row justify-between\">\n              <div className=\"flex flex-row space-x-2.5 text-Gray-6 min-h-9\">\n                <div className=\"flex flex-col items-start min-w-[70px] pr-1.5\">\n                  <div className=\"flex items-center space-x-1\">\n                    <div\n                      className={clsx('w-1.5 h-1.5 rounded-full', {\n                        'bg-Accent-2': target.trackingStatus === 'NOT_SET',\n                        'bg-red-1': target.trackingStatus === 'EXCEEDED',\n                        'bg-yellow-2': target.trackingStatus === 'AT_RISK',\n                        'bg-green-400': target.trackingStatus === 'ON_TRACK',\n                      })}\n                    />\n                    <p className=\"text-2xs\">Spend</p>\n                  </div>\n                  <p className=\"text-sm text-primary font-semibold mt-1\">\n                    {getDisplayUsdAmount(currentSpend)}\n                  </p>\n                </div>\n                <div className={clsx('flex-col items-start min-w-[70px] pr-1.5 hidden', 'md:flex')}>\n                  <div className=\"flex items-center space-x-1\">\n                    <div className=\"w-1.5 h-1.5 rounded-full bg-Gray-6\" />\n                    <p className=\"text-2xs\">Target To Date</p>\n                  </div>\n                  <p className=\"text-sm text-primary font-semibold mt-1\">\n                    {getDisplayUsdAmount(targetToDate)}\n                  </p>\n                </div>\n                <div className=\"flex flex-col items-start min-w-[70px] pr-1.5\">\n                  <div className=\"flex items-center space-x-1\">\n                    <div className=\"w-1.5 h-1.5 rounded-full bg-Gray-6\" />\n                    <p className=\"text-2xs\">Overall Target</p>\n                  </div>\n                  <p className=\"text-sm text-primary font-semibold mt-1\">\n                    {getDisplayUsdAmount(overallTarget)}\n                  </p>\n                </div>\n              </div>\n              {!!target.trackingStatus && (\n                <TargetStatus\n                  type={target.trackingStatus}\n                  target={target}\n                  onTargetSet={handleSetTarget}\n                />\n              )}\n            </div>\n          </div>\n          <div className={clsx('flex w-full flex-col px-5', chartContainerClass)}>\n            <SpendingChart\n              data={{\n                periods: target.periods,\n                spendings: target.spendings ?? [],\n                trackingStatus: target.trackingStatus,\n              }}\n              className=\"overflow-hidden\"\n            />\n          </div>\n        </div>\n        {isDeletingTarget && (\n          <div className=\"absolute flex justify-center items-center inset-0 rounded-card bg-black/10\">\n            <Loading color=\"Gray-3\" />\n          </div>\n        )}\n      </Link>\n    </>\n  );\n};\n","import { Target, TargetStatusType } from './types';\n\nexport const fallbackTarget: Target = {\n  id: 0,\n  name: '',\n  creator: {},\n  updater: {},\n  trackingStatus: TargetStatusType.OnTrack,\n  props: [],\n  periods: [],\n  spendings: [],\n  department: {\n    id: 0,\n    name: '',\n  },\n  isPrimary: false,\n};\n","import { TargetApis } from './apis';\nimport { useFetcher } from '@/common/hooks';\nimport { TargetFilter } from './types';\n\nexport const useTargets = (params?: TargetFilter) => {\n  return useFetcher(['target', params], () => TargetApis.getList({ ...params }));\n};\n"],"names":["clsx","getTargetName","React","TargetFeedName","className","target","Loading","Avatar","useHandler","distanceToNow","TargetStatus","OptionsButton","getColorByText","getDisplayUsdAmount","getTargetPeriodsAmountTotal","Routes","SpendingChart","useDisclosure","Link","useHistory","AddTargetModal","TargetApis","TargetCard","href","onUpdateSuccess","onDeleteSuccess","showColorfulHeading","hidePropertyDropdowns","deletable","chartContainerClass","history","department","addTargetModalDisclosure","overallTarget","currentSpend","targetToDate","targetId","delete","isDeletingTarget","isLoading","deleteTarget","handle","goToTargetDetails","push","Feed","path","replace","feedItem","id","handleSetTarget","e","onOpen","stopPropagation","teamHeaderColor","useMemo","name","handleDeleteClick","isOpen","onClose","background","undefined","isPrimary","updater","fullName","avatar","updatedAt","trackingStatus","periods","spendings","TargetStatusType","fallbackTarget","creator","OnTrack","props","useFetcher","useTargets","params","getList"],"sourceRoot":""}