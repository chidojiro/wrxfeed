{"version":3,"file":"src_main_chart_utils_ts-src_role_useRestrictedItems_ts-src_spending_TooltipContent_tsx-src_sp-6b4707.bundle.js","mappings":"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","sources":["webpack://gravity-web/./src/main/chart.utils.ts","webpack://gravity-web/./src/role/apis.ts","webpack://gravity-web/./src/role/useRestrictedItems.ts","webpack://gravity-web/./src/role/utils.ts","webpack://gravity-web/./src/spending/TooltipContent.tsx","webpack://gravity-web/./src/spending/XAxis.tsx","webpack://gravity-web/./src/spending/utils.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { INITIAL_CHART_DATA } from '@/common/constants';\nimport { DateUtils, round } from '@/common/utils';\nimport { ChartDataPoint, ChartLevel, ChartLineProps, LineChartData } from '@/main/types';\nimport {\n  Target,\n  TargetMonth,\n  TargetPeriod,\n  TargetSpending,\n  TargetStatusConfig,\n  TargetStatusType,\n} from '@/target/types';\nimport dayjs from 'dayjs';\nimport { range } from 'lodash-es';\nimport { decimalLogic, DecimalType } from './utils';\n\nconst Accent6 = '#818CF8';\n\nconst DATA_DATE_FORMAT = 'MMM DD';\nconst BILLION = Math.pow(10, 9);\nconst MILLION = Math.pow(10, 6);\nconst THOUSAND = Math.pow(10, 3);\n\nconst getYearSpending = (spendings: TargetSpending[], year: number) =>\n  spendings?.filter((cur) => cur.year === year).reduce((acc, { total }) => total + acc, 0) ?? 0;\n\nexport const getThisYearSpending = (spendings: TargetSpending[]) =>\n  getYearSpending(spendings, DateUtils.getThisYear());\n\nexport const getLastYearSpending = (spendings: TargetSpending[]) =>\n  getYearSpending(spendings, DateUtils.getThisYear() - 1);\n\nexport const getLineChartDataInMonth = (\n  target: Partial<Target>,\n  targetMonth: TargetMonth,\n  trackingStatus?: TargetStatusType,\n  overallTarget?: number,\n): LineChartData => {\n  const targetDate = dayjs().set('month', targetMonth.month - 1);\n  const isThisMonth = dayjs().month() === targetMonth.month - 1;\n\n  const totalThisYear = getThisYearSpending(target.spendings ?? []);\n  const totalLastYear = getLastYearSpending(target.spendings ?? []);\n  const data: ChartDataPoint[] = Array(targetDate.daysInMonth())\n    .fill({\n      name: '',\n      thisYear: 0,\n      lastYear: 0,\n      target: targetMonth.amount ?? 0,\n    })\n    .map((_, index) => {\n      const dayName = dayjs(targetDate)\n        .date(index + 1)\n        .format(DATA_DATE_FORMAT);\n\n      // Don't draw data line if date index greater than today\n      if (isThisMonth && index > targetDate.date() - 1) {\n        return {\n          name: dayName,\n          lastYear: totalLastYear,\n          target: targetMonth.amount ?? 0,\n        };\n      }\n      return {\n        name: dayName,\n        thisYear: totalThisYear,\n        lastYear: totalLastYear,\n        target: targetMonth.amount ?? 0,\n      };\n    });\n\n  let dotStatusColor = '#34D399';\n  let backgroundStatusColor = '#D1FAE5';\n  if (trackingStatus) {\n    const { dot, background } = TargetStatusConfig[trackingStatus];\n    dotStatusColor = dot;\n    backgroundStatusColor = background;\n  }\n  const lines: ChartLineProps[] = [\n    {\n      name: 'target',\n      type: 'monotone',\n      dataKey: 'target',\n      strokeWidth: 2,\n      strokeDasharray: '8 8',\n      stroke: '#7D8490',\n      fill: '#FFFFFF',\n      dot: false,\n    },\n    {\n      name: 'lastYear',\n      type: 'monotone',\n      dataKey: 'lastYear',\n      strokeWidth: 0,\n      stroke: 'rgba(194, 194, 250, 0.6)',\n      dot: false,\n      fill: 'rgba(194, 194, 250, 0.6)',\n      opacity: 0.8,\n    },\n    {\n      name: 'thisYear',\n      type: 'monotone',\n      dataKey: 'thisYear',\n      strokeWidth: 3,\n      stroke: overallTarget !== 0 ? dotStatusColor : Accent6,\n      dot: false,\n      fill: overallTarget !== 0 ? backgroundStatusColor : Accent6,\n    },\n  ];\n\n  let maxValue = Math.max(totalThisYear, totalLastYear, targetMonth.amount ?? 0);\n  const positiveMax = Math.abs(maxValue);\n  if (positiveMax >= BILLION) {\n    maxValue = Math.ceil(positiveMax / BILLION) * BILLION; // Billion\n  }\n  if (positiveMax >= MILLION) {\n    maxValue = Math.ceil(positiveMax / MILLION) * MILLION; // Millions\n  }\n  if (positiveMax >= THOUSAND) {\n    const remember = THOUSAND;\n    maxValue = Math.ceil(positiveMax / THOUSAND); // Thousands\n    maxValue = Math.ceil(maxValue / 5) * 5 * remember;\n  }\n  return { data, legends: [], lines, maxValue };\n};\n\nexport const getChartLevels = (maxValue: number): ChartLevel[] => {\n  // const maxAndTarget = maxValue - targetAmount;\n  const numberLevel = 5; // Math.floor(maxValue / maxAndTarget);\n  // if (numberLevel > 5) {\n  //   numberLevel = 5;\n  // }\n  // if (numberLevel < 4) {\n  //   numberLevel *= 2;\n  // }\n  const levelValue = maxValue / numberLevel;\n\n  const levels: ChartLevel[] = [];\n  for (let index = 0; index < numberLevel + 1; index += 1) {\n    const valueForThisLevel = Math.ceil(levelValue * index);\n    levels.push({\n      id: index,\n      value: valueForThisLevel,\n      title: decimalLogic(valueForThisLevel, DecimalType.ChartAxis, '$'),\n      isTarget: false,\n    });\n  }\n  return levels;\n};\n\nexport const getTargetMonthsLineChartData = (\n  target: Partial<Target>,\n  targetMonths: TargetMonth[],\n  trackingStatus?: TargetStatusType,\n  overallTarget?: number,\n): LineChartData => {\n  if (!target) return INITIAL_CHART_DATA;\n\n  const monthFormat = 'MMM';\n  const thisMonth = dayjs().month();\n  let cumulativeThisYear = 0;\n  let cumulativeLastYear = 0;\n  let cumulativeTarget = 0;\n\n  const thisYearSpendings =\n    target.spendings?.filter((item) => item.year === DateUtils.getThisYear()) ?? [];\n  const lastYearSpendings =\n    target.spendings?.filter((item) => item.year === DateUtils.getThisYear() - 1) ?? [];\n\n  const thisYearSorted = thisYearSpendings?.sort((a, b) => (a?.month ?? 0) - (b?.month ?? 0));\n  const lastYearSorted = range(0, 12).map((monthIdx) => {\n    const lastYearData = lastYearSpendings.find((e) => e?.month - 1 === monthIdx);\n    return (\n      lastYearData || {\n        year: thisYearSpendings[0]?.year || dayjs().year() - 1,\n        month: monthIdx + 1,\n        total: 0,\n      }\n    );\n  });\n\n  // Find start / end month\n  const availableTargets = targetMonths.filter((item) => item?.amount !== undefined);\n  const startMonth = availableTargets[0]?.month ?? 1;\n  const endMonth = availableTargets[availableTargets.length - 1]?.month ?? 12;\n\n  let data: ChartDataPoint[] = targetMonths.reduce<ChartDataPoint[]>((preVal, target, index) => {\n    // Out of month range\n    if (target.month < startMonth || target.month > endMonth) {\n      return preVal;\n    }\n    const month = dayjs().month(index).format(monthFormat);\n    // Calculate cumulative values\n    cumulativeThisYear += round(\n      thisYearSorted.find(({ month }) => month === target.month)?.total ?? 0,\n      2,\n    );\n    cumulativeLastYear += round(\n      lastYearSorted.find(({ month }) => month === target.month)?.total ?? 0,\n      2,\n    );\n    cumulativeTarget += round(target?.amount ?? 0, 2);\n\n    // Generate data point\n    const dataPoint =\n      index > thisMonth\n        ? {\n            name: month,\n            lastYear: cumulativeLastYear,\n            target: cumulativeTarget,\n          }\n        : {\n            name: month,\n            thisYear: cumulativeThisYear,\n            lastYear: cumulativeLastYear,\n            target: cumulativeTarget,\n          };\n    return [...preVal, dataPoint];\n  }, []);\n\n  // Duplicate data point to draw a line if there is one data point\n  if (data.length === 1) {\n    data = [data[0], data[0]];\n  }\n\n  // Data points is 0 (target wasn't set) => show previous year and current year spending data\n  if (data.length === 0) {\n    data = lastYearSorted.map((lastYearData, index) => {\n      const month = dayjs().month(index).format(monthFormat);\n      // Calculate cumulative values\n      cumulativeThisYear += round(thisYearSorted[index]?.total ?? 0, 2);\n      cumulativeLastYear += round(lastYearData?.total ?? 0, 2);\n\n      return index > thisMonth\n        ? {\n            name: month,\n            lastYear: cumulativeLastYear,\n            target: 0,\n          }\n        : {\n            name: month,\n            thisYear: cumulativeThisYear,\n            lastYear: cumulativeLastYear,\n            target: 0,\n          };\n    });\n  }\n\n  const maxValue = Math.max(cumulativeThisYear, cumulativeLastYear, cumulativeTarget);\n\n  let dotStatusColor = '#34D399';\n  let backgroundStatusColor = '#D1FAE5';\n  if (trackingStatus) {\n    const { dot, background } = TargetStatusConfig[trackingStatus];\n    dotStatusColor = dot;\n    backgroundStatusColor = background;\n  }\n\n  const lines: ChartLineProps[] = [\n    {\n      name: 'target',\n      type: 'monotone',\n      dataKey: 'target',\n      strokeWidth: 2,\n      strokeDasharray: '8 8',\n      stroke: '#7D8490',\n      fill: '#FFFFFF',\n      dot: false,\n    },\n    {\n      name: 'lastYear',\n      type: 'monotone',\n      dataKey: 'lastYear',\n      strokeWidth: 0,\n      stroke: 'rgba(194, 194, 250, 0.6)',\n      dot: false,\n      fill: 'rgba(194, 194, 250, 0.6)',\n      opacity: 0.8,\n    },\n    {\n      name: 'thisYear',\n      type: 'monotone',\n      dataKey: 'thisYear',\n      strokeWidth: 3,\n      stroke: overallTarget !== 0 ? dotStatusColor : Accent6,\n      dot: false,\n      fill: overallTarget !== 0 ? backgroundStatusColor : Accent6,\n    },\n  ];\n\n  return { data, legends: [], lines, maxValue, metadata: { currentSpend: cumulativeThisYear } };\n};\n\nexport const getSpendingByYear = (\n  spendings: TargetSpending[] | undefined,\n): { thisYear: TargetPeriod[]; lastYear: TargetPeriod[] } => {\n  if (!spendings) {\n    return {\n      thisYear: [],\n      lastYear: [],\n    };\n  }\n  const THIS_YEAR = DateUtils.getThisYear();\n  const thisYear = spendings?.filter((item: TargetSpending) => {\n    if (item.year === THIS_YEAR) {\n      return {\n        month: item.month,\n        year: item.year,\n        threshold: item.total,\n      };\n    }\n    return false;\n  });\n  const lastYear = spendings?.filter((item: TargetSpending) => {\n    if (item.year === THIS_YEAR - 1) {\n      return {\n        month: item.month,\n        year: item.year,\n        threshold: item.total,\n      };\n    }\n    return false;\n  });\n  return {\n    thisYear: thisYear ?? [],\n    lastYear: lastYear ?? [],\n  };\n};\n","import { Category, Department } from '@/main/entity';\nimport { RestApis } from '@/rest/apis';\nimport { Vendor } from '@/vendor/types';\nimport {\n  CreateRolePayload,\n  UpdateRolePayload,\n  Role,\n  UpdateAssignedRolesPayload,\n  RestrictedItem,\n} from './types';\nimport { transformRoleResponse } from './utils';\n\nconst get = (id: number) => RestApis.get(`/rbac/roles/${id}`).then(transformRoleResponse);\n\nconst getList = (): Promise<Role[]> =>\n  RestApis.get(`/rbac/roles`).then((roles: any) => roles.map(transformRoleResponse));\n\nconst create = (payload: CreateRolePayload) => RestApis.post(`/rbac/roles`, payload);\n\nconst update = (id: number, payload: UpdateRolePayload) =>\n  RestApis.put(`/rbac/roles/${id}`, payload);\n\nconst _delete = (id: number) => RestApis.delete(`/rbac/roles/${id}`);\n\nconst updateAssigned = (id: number, payload: UpdateAssignedRolesPayload) =>\n  RestApis.put(`/rbac/accounts/${id}/roles`, payload);\n\nconst getCategories = () => RestApis.get<Category[]>('/rbac/categories');\n\nconst getDepartments = () => RestApis.get<Department[]>('/rbac/departments');\n\nconst getVendors = () => RestApis.get<Vendor[]>('/rbac/vendors');\n\nconst getRestrictedItems = () => RestApis.get<RestrictedItem[]>('/rbac/items?type=restricted');\n\nexport const RoleApis = {\n  get,\n  getList,\n  create,\n  update,\n  delete: _delete,\n  updateAssigned,\n  getCategories,\n  getDepartments,\n  getVendors,\n  getRestrictedItems,\n};\n","import { EMPTY_ARRAY } from '@/common/constants';\nimport { useFetcher } from '@/common/hooks';\nimport React from 'react';\nimport { RoleApis } from './apis';\n\nexport const useRestrictedItems = () => {\n  const {\n    data = EMPTY_ARRAY,\n    isInitializing,\n    isLagging,\n    isValidating,\n    mutate,\n  } = useFetcher(['useRestrictedItems'], () => RoleApis.getRestrictedItems());\n\n  return React.useMemo(\n    () => ({\n      restrictedItems: data,\n      isInitializingRestrictedItems: isInitializing,\n      isLaggingRestrictedItems: isLagging,\n      isValidatingRestrictedItems: isValidating,\n      mutateRestrictedItems: mutate,\n    }),\n    [data, isInitializing, isLagging, isValidating, mutate],\n  );\n};\n","import { UserRole } from '@/auth/constants';\nimport { Role, VisibilityConfig } from './types';\n\nconst transformVisibilityConfig = (config: any) => {\n  return {\n    ...config,\n    default: config.resettable ? !config.visible : config.visible,\n  } as VisibilityConfig;\n};\n\nexport const transformRoleResponse = (data: any) => {\n  const { categories, departments, vendors } = data;\n\n  return {\n    ...data,\n    categories: categories?.map(transformVisibilityConfig),\n    departments: departments?.map(transformVisibilityConfig),\n    vendors: vendors?.map(transformVisibilityConfig),\n  } as Role;\n};\n\nexport const isAdmin = (role: Role) => role.name === UserRole.ADMIN;\nexport const isBaseUser = (role: Role) => role.id === 0;\n","import { decimalLogic, DecimalType } from '@/main/utils';\nimport { TargetStatusConfig } from '@/target/types';\nimport { TooltipProps } from 'recharts';\nimport { NameType, ValueType } from 'recharts/types/component/DefaultTooltipContent';\nimport { TrackingStatus } from './types';\n\nexport type TooltipContentProps = TooltipProps<ValueType, NameType> & {\n  showTarget?: boolean;\n  trackingStatus?: TrackingStatus;\n  overallTarget?: boolean;\n};\n\nexport const TooltipContent = ({\n  active,\n  payload,\n  showTarget,\n  trackingStatus,\n  overallTarget,\n}: TooltipContentProps) => {\n  if (active && payload) {\n    const dataPoints = payload[0]?.payload;\n    return (\n      <div className=\"flex bg-primary p-2 rounded-sm\">\n        <div className=\"flex flex-col space-y-1\">\n          <div className=\"flex flex-row items-center\">\n            <p className=\"text-white text-3xs font-semibold\">{dataPoints?.name ?? 'unknown'}</p>\n          </div>\n          {showTarget && (\n            <div\n              key=\"target\"\n              className=\"flex flex-row flex-grow justify-between items-center space-x-10\"\n            >\n              <div className=\"flex flex-row items-center space-x-1\">\n                <div className=\"w-1 h-1 rounded bg-Gray-6\" />\n                <p className=\"text-white text-2xs\">Target</p>\n              </div>\n              <p className=\"text-white text-2xs text-right font-semibold\">\n                {decimalLogic(dataPoints?.target ?? 0, DecimalType.SummedNumbers, '$')}\n              </p>\n            </div>\n          )}\n          <div\n            key=\"this-year\"\n            className=\"flex flex-row flex-grow justify-between items-center space-x-10\"\n          >\n            <div className=\"flex flex-row items-center space-x-1\">\n              <div\n                className=\"w-1 h-1 rounded\"\n                style={{\n                  background: overallTarget\n                    ? '#818CF8'\n                    : trackingStatus && TargetStatusConfig[trackingStatus].dot,\n                }}\n              />\n              <p className=\"text-white text-2xs\">Current</p>\n            </div>\n            <p className=\"text-white text-2xs text-right font-semibold\">\n              {decimalLogic(dataPoints?.thisYear ?? 0, DecimalType.SummedNumbers, '$')}\n            </p>\n          </div>\n          <div\n            key=\"last-year\"\n            className=\"flex flex-row flex-grow justify-between items-center space-x-10\"\n          >\n            <div className=\"flex flex-row items-center space-x-1\">\n              <div className=\"w-1 h-1 rounded bg-Gray-11\" />\n              <p className=\"text-white text-2xs\">Last Year</p>\n            </div>\n            <p className=\"text-white text-2xs text-right font-semibold\">\n              {decimalLogic(dataPoints?.lastYear ?? 0, DecimalType.SummedNumbers, '$')}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n","import { useBreakpoint } from '@/common/hooks';\nimport clsx from 'clsx';\nimport dayjs from 'dayjs';\nimport { range } from 'lodash-es';\nimport React from 'react';\n\nexport type XAxisProps = {\n  startMonth: number;\n  endMonth: number;\n  bar?: boolean;\n};\n\nexport const XAxis = ({ startMonth, endMonth, bar }: XAxisProps) => {\n  const isMobile = useBreakpoint({ '768': false }) ?? true;\n\n  const targetDate = dayjs().set('month', startMonth - 1);\n\n  return startMonth === endMonth ? (\n    <div\n      className={clsx(\n        'flex flex-row w-full text-xs text-Gray-6 font-semibold justify-around my-1 pl-[48px] pr-[10px]',\n      )}\n    >\n      <div className=\"w-20 h-7 flex justify-center items-center\">\n        <p>{targetDate.date(7).format('MMM D')}</p>\n      </div>\n      <div className=\"w-20 h-7 flex justify-center items-center\">\n        <p>{targetDate.date(14).format('MMM D')}</p>\n      </div>\n      <div className=\"w-20 h-7 flex justify-center items-center\">\n        <p>{targetDate.date(21).format('MMM D')}</p>\n      </div>\n      <div className=\"w-20 h-7 flex justify-center items-center\">\n        <p>{targetDate.date(28).format('MMM D')}</p>\n      </div>\n    </div>\n  ) : (\n    <div\n      className={clsx(\n        'flex flex-row w-full text-xs text-Gray-6 font-semibold justify-between pl-[48px] pr-[10px]',\n        { 'justify-around pl-[48px] pr-[10px]': bar, 'pl-[38px]': !bar },\n      )}\n    >\n      {!bar && (\n        <div className=\"w-[25px] h-7 flex justify-center items-center first:justify-start last:justify-end\"></div>\n      )}\n      {range(startMonth, endMonth + 1).map((month: number) => (\n        <div\n          key={`x-${month}`}\n          className=\"w-[25px] h-7 flex justify-center items-center first:justify-start last:justify-end\"\n        >\n          <p>\n            {isMobile\n              ? dayjs()\n                  .month(month - 1)\n                  .format('MMM')\n                  .slice(0, 1)\n              : dayjs()\n                  .month(month - 1)\n                  .format('MMM')}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { INITIAL_CHART_DATA } from '@/common/constants';\nimport { AssertUtils, DateUtils, round } from '@/common/utils';\nimport { SPENDINGS_DATE_LIMIT, USE_PREV_YEAR_SPENDINGS } from '@/env';\nimport { ChartDataPoint, ChartLevel, ChartLineProps, LineChartData } from '@/main/types';\nimport { decimalLogic, DecimalType } from '@/main/utils';\nimport { TargetMonth, TargetPeriod, TargetSpending, TargetStatusConfig } from '@/target/types';\nimport dayjs from 'dayjs';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport { groupBy, range, sumBy } from 'lodash-es';\nimport { DateRangeFilter } from '@/feed/types';\nimport { SpendingChartData } from './SpendingChart';\nimport { MonthData, Spending, TrackingStatus } from './types';\n\ndayjs.extend(weekOfYear);\n\nconst Accent9 = '#C2C2FA';\n\nconst DATA_DATE_FORMAT = 'MMM DD';\nconst BILLION = Math.pow(10, 9);\nconst MILLION = Math.pow(10, 6);\nconst THOUSAND = Math.pow(10, 3);\n\nconst getThisMonth = () => (USE_PREV_YEAR_SPENDINGS ? 11 : dayjs().month());\n\nconst getYearSpending = (spendings: TargetSpending[], year: number) =>\n  spendings?.filter((cur) => cur.year === year).reduce((acc, { total }) => total + acc, 0) ?? 0;\n\nexport const getThisYearSpending = (spendings: TargetSpending[]) =>\n  getYearSpending(spendings, DateUtils.getThisYear());\n\nexport const getLastYearSpending = (spendings: TargetSpending[]) =>\n  getYearSpending(spendings, DateUtils.getThisYear() - 1);\n\nexport const getLineChartDataInMonth = (\n  data: SpendingChartData,\n  targetMonth: TargetMonth,\n  trackingStatus?: TrackingStatus,\n): LineChartData => {\n  const { spendings, periods = [] } = data;\n\n  const overallTarget = !trackingStatus || isEmptyPeriods(periods);\n\n  const targetDate = dayjs().set('month', targetMonth.month - 1);\n  const isThisMonth = getThisMonth() === targetMonth.month - 1;\n\n  const totalThisYear = getThisYearSpending(spendings ?? []);\n  const totalLastYear = getLastYearSpending(spendings ?? []);\n  const chartData: ChartDataPoint[] = Array(targetDate.daysInMonth())\n    .fill({\n      name: '',\n      thisYear: 0,\n      lastYear: 0,\n      target: targetMonth.amount ?? 0,\n    })\n    .map((_, index) => {\n      const dayName = dayjs(targetDate)\n        .date(index + 1)\n        .format(DATA_DATE_FORMAT);\n\n      // Don't draw data line if date index greater than today\n      if (isThisMonth && index > targetDate.date() - 1) {\n        return {\n          name: dayName,\n          lastYear: totalLastYear,\n          target: targetMonth.amount ?? 0,\n        };\n      }\n      return {\n        name: dayName,\n        thisYear: totalThisYear,\n        lastYear: totalLastYear,\n        target: targetMonth.amount ?? 0,\n      };\n    });\n\n  let dotStatusColor = '#34D399';\n  let backgroundStatusColor = '#D1FAE5';\n  if (trackingStatus) {\n    const { dot, background } = TargetStatusConfig[trackingStatus];\n    dotStatusColor = dot;\n    backgroundStatusColor = background;\n  }\n\n  const targetLine =\n    trackingStatus !== 'NOT_SET'\n      ? {\n          name: 'target',\n          type: 'monotone',\n          dataKey: 'target',\n          strokeWidth: 2,\n          strokeDasharray: '8 8',\n          stroke: '#7D8490',\n          fill: 'none',\n          dot: false,\n        }\n      : {\n          name: '',\n          type: '',\n          dataKey: '',\n          strokeWidth: 0,\n          strokeDasharray: '',\n          stroke: '',\n          fill: '',\n          dot: false,\n        };\n\n  const lines: ChartLineProps[] = [\n    targetLine,\n    {\n      name: 'lastYear',\n      type: 'monotone',\n      dataKey: 'lastYear',\n      strokeWidth: 0,\n      stroke: '#F3F4F6',\n      dot: false,\n      fill: '#F3F4F6',\n      opacity: 0.8,\n    },\n    {\n      name: 'thisYear',\n      type: 'monotone',\n      dataKey: 'thisYear',\n      strokeWidth: 3,\n      stroke: overallTarget ? Accent9 : dotStatusColor,\n      dot: false,\n      fill: overallTarget ? Accent9 : backgroundStatusColor,\n    },\n  ];\n\n  let maxValue = Math.max(totalThisYear, totalLastYear, targetMonth.amount ?? 0);\n  const positiveMax = Math.abs(maxValue);\n  if (positiveMax >= BILLION) {\n    maxValue = Math.ceil(positiveMax / BILLION) * BILLION; // Billion\n  }\n  if (positiveMax >= MILLION) {\n    maxValue = Math.ceil(positiveMax / MILLION) * MILLION; // Millions\n  }\n  if (positiveMax >= THOUSAND) {\n    const remember = THOUSAND;\n    maxValue = Math.ceil(positiveMax / THOUSAND); // Thousands\n    maxValue = Math.ceil(maxValue / 5) * 5 * remember;\n  }\n  return { data: chartData, legends: [], lines, maxValue };\n};\n\nexport const getChartLevels = (maxValue: number): ChartLevel[] => {\n  const numberLevel = 5;\n  const levelValue = maxValue / numberLevel;\n  const levels: ChartLevel[] = [];\n  for (let index = 0; index < numberLevel + 1; index += 1) {\n    const valueForThisLevel = Math.ceil(levelValue * index);\n    levels.push({\n      id: index,\n      value: valueForThisLevel,\n      title: decimalLogic(valueForThisLevel, DecimalType.ChartAxis, '$'),\n      isTarget: false,\n    });\n  }\n  return levels;\n};\n\nexport const getMonthsLineChartData = (\n  data: SpendingChartData,\n  months: MonthData[],\n  trackingStatus?: TrackingStatus,\n): LineChartData => {\n  if (!data) return INITIAL_CHART_DATA;\n\n  const { periods = [], spendings } = data;\n\n  const overallTarget = !trackingStatus || isEmptyPeriods(periods);\n\n  const monthFormat = 'MMM';\n  const thisMonth = getThisMonth();\n  let cumulativeThisYear = 0;\n  let cumulativeLastYear = 0;\n  let cumulativeTarget = 0;\n\n  const thisYearSpendings =\n    spendings?.filter((item) => item.year === DateUtils.getThisYear()) ?? [];\n  const lastYearSpendings =\n    spendings?.filter((item) => item.year === DateUtils.getThisYear() - 1) ?? [];\n\n  const thisYearSorted = thisYearSpendings?.sort((a, b) => (a?.month ?? 0) - (b?.month ?? 0));\n  const lastYearSorted = range(0, 12).map((monthIdx) => {\n    const lastYearData = lastYearSpendings.find((e) => e?.month - 1 === monthIdx);\n    return (\n      lastYearData || {\n        year: thisYearSpendings[0]?.year || dayjs().year() - 1,\n        month: monthIdx + 1,\n        total: 0,\n      }\n    );\n  });\n\n  // Find start / end month\n  const availableTargets = months.filter((item) => item?.amount !== undefined);\n  const startMonth = availableTargets[0]?.month ?? 1;\n  const endMonth = availableTargets[availableTargets.length - 1]?.month ?? 12;\n\n  let chartData: ChartDataPoint[] = months.reduce<ChartDataPoint[]>(\n    (preVal, monthData, index) => {\n      // Out of month range\n      if (monthData.month < startMonth || monthData.month > endMonth) {\n        return preVal;\n      }\n      const month = dayjs().month(index).format(monthFormat);\n      // Calculate cumulative values\n      cumulativeThisYear += round(\n        thisYearSorted.find(({ month }) => month === monthData.month)?.total ?? 0,\n        2,\n      );\n      cumulativeLastYear += round(\n        lastYearSorted.find(({ month }) => month === monthData.month)?.total ?? 0,\n        2,\n      );\n      cumulativeTarget += round(monthData?.amount ?? 0, 2);\n\n      // Generate data point\n      const dataPoint =\n        index > thisMonth\n          ? {\n              name: month,\n              lastYear: cumulativeLastYear,\n              target: cumulativeTarget,\n            }\n          : {\n              name: month,\n              thisYear: cumulativeThisYear,\n              lastYear: cumulativeLastYear,\n              target: cumulativeTarget,\n            };\n      return [...preVal, dataPoint];\n    },\n    [{ name: '', lastYear: 0, thisYear: 0, target: 0 }],\n  );\n\n  // Duplicate data point to draw a line if there is one data point\n  if (chartData.length === 1) {\n    chartData = [chartData[0], chartData[0]];\n  }\n\n  // Data points is 0 (target wasn't set) => show previous year and current year spending data\n  if (chartData.length === 0) {\n    chartData = lastYearSorted.map((lastYearData, index) => {\n      const month = dayjs().month(index).format(monthFormat);\n      // Calculate cumulative values\n      cumulativeThisYear += round(thisYearSorted[index]?.total ?? 0, 2);\n      cumulativeLastYear += round(lastYearData?.total ?? 0, 2);\n\n      return index > thisMonth\n        ? {\n            name: month,\n            lastYear: cumulativeLastYear,\n            target: 0,\n          }\n        : {\n            name: month,\n            thisYear: cumulativeThisYear,\n            lastYear: cumulativeLastYear,\n            target: 0,\n          };\n    });\n  }\n\n  const maxValue = Math.max(cumulativeThisYear, cumulativeLastYear, cumulativeTarget);\n\n  let dotStatusColor = '#34D399';\n  let backgroundStatusColor = '#D1FAE5';\n  if (trackingStatus) {\n    const { dot, background } = TargetStatusConfig[trackingStatus];\n    dotStatusColor = dot;\n    backgroundStatusColor = background;\n  }\n\n  const targetLine =\n    trackingStatus !== 'NOT_SET'\n      ? {\n          name: 'target',\n          type: 'monotone',\n          dataKey: 'target',\n          strokeWidth: 2,\n          strokeDasharray: '8 8',\n          stroke: '#7D8490',\n          fill: 'none',\n          dot: false,\n        }\n      : {\n          name: '',\n          type: '',\n          dataKey: '',\n          strokeWidth: 0,\n          strokeDasharray: '',\n          stroke: '',\n          fill: '',\n          dot: false,\n        };\n\n  const lines: ChartLineProps[] = [\n    targetLine,\n    {\n      name: 'lastYear',\n      type: 'monotone',\n      dataKey: 'lastYear',\n      strokeWidth: 0,\n      stroke: '#F3F4F6',\n      dot: false,\n      fill: '#F3F4F6',\n      opacity: 0.8,\n    },\n    {\n      name: 'thisYear',\n      type: 'monotone',\n      dataKey: 'thisYear',\n      strokeWidth: 3,\n      stroke: overallTarget ? Accent9 : dotStatusColor,\n      dot: false,\n      fill: overallTarget ? Accent9 : backgroundStatusColor,\n    },\n  ];\n\n  return {\n    data: chartData,\n    legends: [],\n    lines,\n    maxValue,\n    metadata: { currentSpend: cumulativeThisYear },\n  };\n};\n\nexport const getSpendingByYear = (\n  spendings: TargetSpending[] | undefined,\n): { thisYear: TargetPeriod[]; lastYear: TargetPeriod[] } => {\n  if (!spendings) {\n    return {\n      thisYear: [],\n      lastYear: [],\n    };\n  }\n  const THIS_YEAR = DateUtils.getThisYear();\n  const thisYear = spendings?.filter((item: TargetSpending) => {\n    if (item.year === THIS_YEAR) {\n      return {\n        month: item.month,\n        year: item.year,\n        threshold: item.total,\n      };\n    }\n    return false;\n  });\n  const lastYear = spendings?.filter((item: TargetSpending) => {\n    if (item.year === THIS_YEAR - 1) {\n      return {\n        month: item.month,\n        year: item.year,\n        threshold: item.total,\n      };\n    }\n    return false;\n  });\n  return {\n    thisYear: thisYear ?? [],\n    lastYear: lastYear ?? [],\n  };\n};\n\nexport const isEmptyPeriods = (periods: TargetPeriod[]) =>\n  periods.every((v: TargetPeriod) => !v.amount);\n\nexport const getCurrentSpendings = (\n  spendings: Spending[],\n  periods: TargetPeriod[],\n  year = DateUtils.getThisYear(),\n) => {\n  const yearSpendingsGroupedByMonth = groupBy(\n    spendings.filter((spending) => spending.year === year),\n    'month',\n  );\n  const spendingsSortedByMonth = new Array(12)\n    .fill(null)\n    .map((_, idx) => ({ ...yearSpendingsGroupedByMonth[idx + 1]?.[0], month: idx + 1 }));\n\n  const periodsGroupedByMonth = groupBy(\n    periods.filter((spending) => spending.year === year),\n    'month',\n  );\n  const periodsSortedByMonth = new Array(12)\n    .fill(null)\n    .map((_, idx) => ({ ...periodsGroupedByMonth[idx + 1]?.[0], month: idx + 1 }));\n\n  const firstMeaningfulPeriodMonth = periodsSortedByMonth.findIndex(\n    ({ amount }) => !AssertUtils.isNullOrUndefined(amount),\n  );\n\n  const lastMeaningfulPeriodMonth =\n    periodsSortedByMonth.length -\n    1 -\n    periodsSortedByMonth\n      .slice()\n      .reverse()\n      .findIndex(({ amount }) => !AssertUtils.isNullOrUndefined(amount));\n\n  return (\n    spendingsSortedByMonth\n      .slice(firstMeaningfulPeriodMonth, lastMeaningfulPeriodMonth + 1)\n      .reduce((total, target) => total + (target.total ?? 0), 0) ?? 0\n  );\n};\n\nconst COLORS = [\n  '#2C0594',\n  '#6565FB',\n  '#BD86F3',\n  '#BF43A4',\n  '#801BAF',\n  '#EF8482',\n  '#FCCD25',\n  '#FFA31D',\n  '#319DB0',\n  '#225959',\n];\n\nconst dateFormat = 'YYYY-MM-DD';\n\nconst getChartDate = ({\n  year,\n  month,\n  week,\n  day,\n}: {\n  year: number;\n  month?: number;\n  week?: number;\n  day?: number;\n}) => {\n  let tempDate = trimTime(dayjs().year(year));\n\n  if (week) {\n    return tempDate.week(week).day(0).format(dateFormat);\n  }\n\n  if (month) {\n    tempDate = tempDate.month(month - 1);\n  }\n\n  if (day) {\n    tempDate = tempDate.date(day);\n  } else {\n    tempDate = tempDate.date(1);\n  }\n\n  return tempDate.format(dateFormat);\n};\n\nexport const getSpendingsGroupedByYear = (spendings: Spending[]) => {\n  const spendingsGroupedByYear = groupBy(spendings, ({ year }) => year);\n\n  return spendingsGroupedByYear;\n};\n\nexport const getSpendingsGroupedByDate = (spendings: Spending[]) => {\n  const spendingsGroupedByDate = groupBy(spendings, ({ year, month, week, day }) =>\n    getChartDate({ year, month, week, day }),\n  );\n\n  return spendingsGroupedByDate;\n};\n\nexport const getSortedTotalSpendings = (spendings: Spending[], dateRange: DateRangeFilter) => {\n  const { from, to } = convertDateRangeToFromTo({ dateRange }, true);\n\n  const activeSpendings = spendings.filter(({ year, month, week, day }) =>\n    dayjs(getChartDate({ year, month, week, day })).isBetween(from, to, 'day', '[]'),\n  );\n\n  const spendingsGroupedById = groupBy(activeSpendings, 'item.id');\n\n  const sortedTotalSpendings = Object.entries(spendingsGroupedById)\n    .map(([id, spendings]) => ({\n      id: +id,\n      name: spendings[0].item?.name,\n      total: spendings.reduce((total, spending) => total + spending.total, 0),\n    }))\n    .sort((a, b) => b.total - a.total)\n    .map((item, idx) => ({ ...item, color: COLORS[idx] }));\n\n  return sortedTotalSpendings;\n};\n\nconst getPreviousYearDate = (date: string, timelineUnit: string) => {\n  const week = dayjs(date).week();\n  const month = dayjs(date).month();\n  const year = dayjs(date).year() - 1;\n\n  let tempDate = dayjs(date).year(year);\n\n  if (timelineUnit === 'week') {\n    tempDate = tempDate.week(week).day(0);\n  } else if (timelineUnit === 'month') {\n    tempDate = tempDate.month(month).date(1);\n  }\n\n  return tempDate.format(dateFormat);\n};\n\nexport const getChartDataByDateRange = (spendings: Spending[], dateRange: DateRangeFilter) => {\n  const timelineUnit = getChartTimelineUnit(dateRange);\n\n  const top10TotalSpendings = getSortedTotalSpendings(spendings, dateRange).slice(0, 10);\n  const top10TotalSpendingsIds = top10TotalSpendings.map(({ id }) => id);\n\n  const { from, to } = convertDateRangeToFromTo({ dateRange }, true);\n\n  const spendingsGroupedByDate = getSpendingsGroupedByDate(spendings);\n\n  const data = range(dayjs(to).diff(from, timelineUnit) + 1).map((idx) => {\n    const offset = idx;\n\n    const currentDate = (() => {\n      let tempDate = dayjs(from);\n\n      if (timelineUnit === 'day') {\n        tempDate = tempDate.add(offset, timelineUnit);\n      } else if (timelineUnit === 'week') {\n        tempDate = tempDate.day(0).add(offset, timelineUnit);\n      } else {\n        tempDate = tempDate.date(1).add(offset, timelineUnit);\n      }\n\n      return tempDate.format(dateFormat);\n    })();\n\n    const previousYearDate = getPreviousYearDate(currentDate, timelineUnit);\n\n    const currentDateSpendings = spendingsGroupedByDate[currentDate];\n\n    const currentDateSpendingsGroupedById = groupBy(currentDateSpendings, ({ item }) => item?.id);\n\n    const { top10TotalGroupedById, othersTotal } = Object.entries(\n      currentDateSpendingsGroupedById,\n    ).reduce(\n      ({ top10TotalGroupedById, othersTotal }, [id, spends]) => {\n        if (!top10TotalSpendingsIds.includes(+id)) {\n          return {\n            top10TotalGroupedById,\n            othersTotal: othersTotal + sumBy(spends, 'total'),\n          };\n        }\n\n        return {\n          top10TotalGroupedById: {\n            ...top10TotalGroupedById,\n            [id]: sumBy(spends, 'total'),\n          },\n          othersTotal,\n        };\n      },\n      { top10TotalGroupedById: {}, othersTotal: 0 },\n    );\n\n    const getName = () => {\n      const isDifferentYear = dayjs(from).year() !== dayjs(to).year();\n\n      if (timelineUnit === 'day' || timelineUnit === 'week') {\n        if (isDifferentYear) return dayjs(currentDate).format('MM/DD\\nYYYY');\n\n        return dayjs(currentDate).format('MM/DD');\n      }\n\n      if (isDifferentYear) return dayjs(currentDate).format('MMM\\nYYYY');\n\n      return dayjs(currentDate).format('MMM');\n    };\n\n    return {\n      name: getName(),\n      unit: timelineUnit,\n      date: currentDate,\n      currentYearTotal: sumBy(spendingsGroupedByDate[currentDate] ?? [], 'total'),\n      previousYearTotal: sumBy(spendingsGroupedByDate[previousYearDate] ?? [], 'total'),\n      ...top10TotalGroupedById,\n      '-1': othersTotal,\n      items: [top10TotalSpendings, { id: -1, name: 'Other' }].flat(),\n    };\n  });\n\n  return data;\n};\n\nexport const getChartTimelineUnit = (dateRange: DateRangeFilter) => {\n  if (Array.isArray(dateRange)) {\n    const [from, to] = dateRange;\n\n    if (dayjs(to).diff(from, 'day') < 30) {\n      return 'day';\n    }\n\n    if (dayjs(to).diff(from, 'day') < 90) {\n      return 'week';\n    }\n\n    return 'month';\n  } else {\n    switch (dateRange) {\n      case '30-days':\n        return 'day';\n      case '90-days':\n        return 'week';\n      default:\n        return 'month';\n    }\n  }\n};\n\nconst trimTime = (day: dayjs.Dayjs) => day.hour(0).minute(0).second(0).millisecond(0);\n\nexport const convertDateRangeToFromTo = (\n  {\n    dateRange,\n    from,\n    to,\n  }: {\n    dateRange: DateRangeFilter;\n    from?: string;\n    to?: string;\n  },\n  force = false,\n) => {\n  const format = 'YYYY-MM-DD';\n\n  if (force) {\n    return {\n      dateRange: 'custom' as const,\n      from: trimTime(\n        (() => {\n          switch (dateRange) {\n            case '30-days':\n              return trimTime(dayjs(SPENDINGS_DATE_LIMIT).subtract(29, 'day'));\n            case '90-days':\n              return dayjs(SPENDINGS_DATE_LIMIT).subtract(89, 'day');\n            case 'year-to-date':\n              return dayjs(SPENDINGS_DATE_LIMIT).date(1).month(0);\n            default:\n              return dayjs(dateRange[0]);\n          }\n        })(),\n      ).format(format),\n      to: trimTime(\n        (() => {\n          switch (dateRange) {\n            case 'year-to-date':\n              return dayjs(SPENDINGS_DATE_LIMIT).month(11).date(31);\n            case '30-days':\n            case '90-days':\n              return dayjs(SPENDINGS_DATE_LIMIT);\n            default:\n              return dayjs(dateRange[1]);\n          }\n        })(),\n      ).format(format),\n    };\n  }\n\n  return {\n    dateRange: typeof dateRange === 'string' ? dateRange : 'custom',\n    from: from ?? (Array.isArray(dateRange) ? dayjs(dateRange[0]).format(format) : undefined),\n    to: to ?? (Array.isArray(dateRange) ? dayjs(dateRange[1]).format(format) : undefined),\n  };\n};\n"],"names":["INITIAL_CHART_DATA","DateUtils","round","TargetStatusConfig","dayjs","range","decimalLogic","DecimalType","Accent6","DATA_DATE_FORMAT","BILLION","Math","pow","MILLION","THOUSAND","getYearSpending","spendings","year","filter","cur","reduce","acc","total","getThisYearSpending","getThisYear","getLastYearSpending","getLineChartDataInMonth","target","targetMonth","trackingStatus","overallTarget","targetDate","set","month","isThisMonth","totalThisYear","totalLastYear","data","Array","daysInMonth","fill","name","thisYear","lastYear","amount","map","_","index","dayName","date","format","dotStatusColor","backgroundStatusColor","dot","background","lines","type","dataKey","strokeWidth","strokeDasharray","stroke","opacity","maxValue","max","positiveMax","abs","ceil","remember","legends","getChartLevels","numberLevel","levelValue","levels","valueForThisLevel","push","id","value","title","ChartAxis","isTarget","getTargetMonthsLineChartData","targetMonths","monthFormat","thisMonth","cumulativeThisYear","cumulativeLastYear","cumulativeTarget","thisYearSpendings","item","lastYearSpendings","thisYearSorted","sort","a","b","lastYearSorted","monthIdx","lastYearData","find","e","availableTargets","undefined","startMonth","endMonth","length","preVal","dataPoint","metadata","currentSpend","getSpendingByYear","THIS_YEAR","threshold","RestApis","transformRoleResponse","get","then","getList","roles","create","payload","post","update","put","_delete","delete","updateAssigned","getCategories","getDepartments","getVendors","getRestrictedItems","RoleApis","EMPTY_ARRAY","useFetcher","React","useRestrictedItems","isInitializing","isLagging","isValidating","mutate","useMemo","restrictedItems","isInitializingRestrictedItems","isLaggingRestrictedItems","isValidatingRestrictedItems","mutateRestrictedItems","UserRole","transformVisibilityConfig","config","default","resettable","visible","categories","departments","vendors","isAdmin","role","ADMIN","isBaseUser","TooltipContent","active","showTarget","dataPoints","SummedNumbers","useBreakpoint","clsx","XAxis","bar","isMobile","slice","AssertUtils","SPENDINGS_DATE_LIMIT","USE_PREV_YEAR_SPENDINGS","weekOfYear","groupBy","sumBy","extend","Accent9","getThisMonth","periods","isEmptyPeriods","chartData","targetLine","getMonthsLineChartData","months","monthData","every","v","getCurrentSpendings","yearSpendingsGroupedByMonth","spending","spendingsSortedByMonth","idx","periodsGroupedByMonth","periodsSortedByMonth","firstMeaningfulPeriodMonth","findIndex","isNullOrUndefined","lastMeaningfulPeriodMonth","reverse","COLORS","dateFormat","getChartDate","week","day","tempDate","trimTime","getSpendingsGroupedByYear","spendingsGroupedByYear","getSpendingsGroupedByDate","spendingsGroupedByDate","getSortedTotalSpendings","dateRange","convertDateRangeToFromTo","from","to","activeSpendings","isBetween","spendingsGroupedById","sortedTotalSpendings","Object","entries","color","getPreviousYearDate","timelineUnit","getChartDataByDateRange","getChartTimelineUnit","top10TotalSpendings","top10TotalSpendingsIds","diff","offset","currentDate","add","previousYearDate","currentDateSpendings","currentDateSpendingsGroupedById","top10TotalGroupedById","othersTotal","spends","includes","getName","isDifferentYear","unit","currentYearTotal","previousYearTotal","items","flat","isArray","hour","minute","second","millisecond","force","subtract"],"sourceRoot":""}