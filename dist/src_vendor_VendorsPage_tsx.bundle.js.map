{"version":3,"file":"src_vendor_VendorsPage_tsx.bundle.js","mappings":"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","sources":["webpack://gravity-web/./src/assets/icons/solid/tick-small.svg","webpack://gravity-web/./src/main/molecules/DirectoryItem/index.tsx","webpack://gravity-web/./src/subscription/ToggleFollowButton.tsx","webpack://gravity-web/./src/vendor/VendorList.tsx","webpack://gravity-web/./src/vendor/VendorsPage.tsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgTickSmall = function SvgTickSmall(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 7.5 7 10l4-5\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5\n  })));\n};\nexport default SvgTickSmall;","import { Avatar } from '@/common/components';\nimport { Category, Department } from '@/main/entity';\nimport { getColorByText, getNameAbbreviation } from '@/main/utils';\nimport { ToggleFollowButton } from '@/subscription/ToggleFollowButton';\nimport { Vendor } from '@/vendor/types';\nimport React, { MouseEventHandler } from 'react';\n\ninterface DirectoryItem {\n  item: Department | Category | Vendor;\n  disableFollow?: boolean;\n  onClick?: MouseEventHandler<HTMLDivElement>;\n  itemType: 'categories' | 'vendors' | 'departments';\n}\n\nconst DirectoryItem: React.FC<DirectoryItem> = ({\n  item,\n  disableFollow = false,\n  onClick,\n  itemType = 'categories',\n}) => {\n  const avatarBgColor = React.useMemo(\n    () => getColorByText(item?.name ?? '', item.id, true),\n    [item],\n  );\n\n  const renderAvatarOrShortName = () => {\n    const shortName = getNameAbbreviation(item?.name);\n    const isHaveAvatar = item?.avatar;\n    return (\n      <div\n        className=\"w-8 h-8 flex justify-center items-center rounded-full\"\n        style={{ background: avatarBgColor }}\n      >\n        {isHaveAvatar && <Avatar size=\"md\" fullName={item.name} src={isHaveAvatar} />}\n        {!isHaveAvatar && <p className=\"text-xs font-semibold text-white\">{shortName}</p>}\n      </div>\n    );\n  };\n\n  const renderIcon = () => {\n    if (disableFollow) return null;\n\n    return <ToggleFollowButton type={itemType} item={item} />;\n  };\n\n  return (\n    <div\n      aria-hidden=\"true\"\n      className=\"flex items-center space-x-2 cursor-pointer px-4 py-3 min-h-16 sm:px-6 bg-white border border-Gray-11 w-full text-sm text-Gray-3 shadow overflow-hidden sm:rounded-card\"\n      onClick={onClick}\n    >\n      {renderAvatarOrShortName()}\n      <div className=\"flex flex-1\">\n        <p className=\"text-sm font-medium text-Gray-1\">{item?.name}</p>\n      </div>\n      {renderIcon()}\n    </div>\n  );\n};\n\nexport default DirectoryItem;\n","import { ReactComponent as AddIcon } from '@/assets/icons/solid/add-small.svg';\nimport { ReactComponent as TickIcon } from '@/assets/icons/solid/tick-small.svg';\nimport { Button } from '@/common/components';\nimport { Subscription } from '@/main/entity';\nimport React from 'react';\nimport { useSubscribe } from './useSubscribe';\nimport { useSubscription } from './useSubscription';\nimport { useUnsubscribe } from './useUnsubscribe';\n\nexport type ToggleFollowButtonProps<T> = {\n  colorScheme?: 'white' | 'primary';\n  loading?: boolean;\n  item: T | T[];\n  type: keyof Subscription;\n};\n\nexport const ToggleFollowButton = <T extends { id: number; name: string }>({\n  colorScheme = 'primary',\n  loading,\n  item,\n  type,\n}: ToggleFollowButtonProps<T>) => {\n  const baseProps = {\n    pill: true,\n    variant: 'outline' as any,\n    colorScheme,\n    loading,\n  };\n\n  const { isSubscribed } = useSubscription();\n  const { subscribe } = useSubscribe();\n  const { unsubscribe } = useUnsubscribe();\n\n  const subscribed = [item].flat().some(({ id }) => isSubscribed(type, id));\n\n  return subscribed ? (\n    <Button\n      {...baseProps}\n      onClick={(e) => {\n        e.stopPropagation();\n        unsubscribe(type, item);\n      }}\n      iconLeft={\n        <TickIcon\n          width={16}\n          height={16}\n          viewBox=\"0 0 15 15\"\n          className=\"stroke-current path-no-stroke\"\n        />\n      }\n    >\n      Following\n    </Button>\n  ) : (\n    <Button\n      {...baseProps}\n      onClick={(e) => {\n        e.stopPropagation();\n        subscribe(type, item);\n      }}\n      iconLeft={\n        <AddIcon\n          width={16}\n          height={16}\n          viewBox=\"0 0 15 15\"\n          className=\"stroke-current stroke-1 path-no-stroke\"\n        />\n      }\n    >\n      Follow\n    </Button>\n  );\n};\n","import DirectoryItem from '@/main/molecules/DirectoryItem';\nimport { Vendor } from './types';\nimport mixpanel from 'mixpanel-browser';\nimport React from 'react';\nimport { useProfile } from '@/profile/useProfile';\nimport { identifyMixPanelUserProfile } from '@/mixpanel/useMixPanel';\nimport { useMountEffect } from '@/common/hooks';\n\ntype VendorListProps = {\n  vendors: Vendor[];\n  onVendorClick?: (dept: Vendor) => void;\n};\n\nexport const VendorList: React.VFC<VendorListProps> = ({ vendors, onVendorClick }) => {\n  const { profile } = useProfile();\n\n  useMountEffect(() => {\n    mixpanel.track('Vendor Directory View', {\n      user_id: profile?.id,\n      email: profile?.email,\n      company_id: profile?.company?.id,\n    });\n    identifyMixPanelUserProfile(profile);\n  });\n\n  return (\n    <ul className=\"flex flex-col space-y-6 px-0.5\">\n      {vendors.map((vendor) => (\n        <li key={vendor.id} className=\"\">\n          <DirectoryItem item={vendor} onClick={() => onVendorClick?.(vendor)} itemType=\"vendors\" />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { InfiniteLoader } from '@/common/components';\nimport { MainLayout } from '@/layout/MainLayout';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { VendorApis } from './apis';\nimport { Vendor } from './types';\nimport { VendorList } from './VendorList';\n\nexport const VendorsPage = () => {\n  const history = useHistory();\n  const [loadedVendors, setLoadedVendors] = React.useState<Vendor[]>([]);\n\n  const handleVendorClick = (value?: Vendor): void => {\n    history.push({\n      pathname: `/vendors/${value?.id.toString()}`,\n    });\n  };\n\n  return (\n    <MainLayout>\n      <h1 className=\"sr-only\">Vendors list</h1>\n      <VendorList vendors={loadedVendors} onVendorClick={handleVendorClick} />\n      <InfiniteLoader\n        mode=\"ON_SIGHT\"\n        onLoad={async (paginationParams) => {\n          const data = await VendorApis.getList(paginationParams);\n          setLoadedVendors((prev) => [...prev, ...data]);\n          return data;\n        }}\n      />\n    </MainLayout>\n  );\n};\n"],"names":["Avatar","getColorByText","getNameAbbreviation","ToggleFollowButton","React","DirectoryItem","item","disableFollow","onClick","itemType","avatarBgColor","useMemo","name","id","renderAvatarOrShortName","shortName","isHaveAvatar","avatar","background","renderIcon","ReactComponent","AddIcon","TickIcon","Button","useSubscribe","useSubscription","useUnsubscribe","colorScheme","loading","type","baseProps","pill","variant","isSubscribed","subscribe","unsubscribe","subscribed","flat","some","e","stopPropagation","mixpanel","useProfile","identifyMixPanelUserProfile","useMountEffect","VendorList","vendors","onVendorClick","profile","track","user_id","email","company_id","company","map","vendor","InfiniteLoader","MainLayout","useHistory","VendorApis","VendorsPage","history","useState","loadedVendors","setLoadedVendors","handleVendorClick","value","push","pathname","toString","paginationParams","getList","data","prev"],"sourceRoot":""}