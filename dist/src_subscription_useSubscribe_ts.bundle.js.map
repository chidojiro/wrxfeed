{"version":3,"file":"src_subscription_useSubscribe_ts.bundle.js","mappings":";;;;;;;;;;;;;;;;;+CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD0B;AACgB;AAEU;AAE7C,IAAMG,YAAY,GAAG,SAAfA,YAAY,GAAiD;EACxE,uBAA6CD,iEAAe,EAAE;IAAtDE,YAAY,oBAAZA,YAAY;IAAEC,kBAAkB,oBAAlBA,kBAAkB;EAExC,IAAMC,SAAS,GAAGN,8CAAiB,CACjC,UAACQ,IAAqC,EAAEC,IAAa,EAAK;IACxDJ,kBAAkB,0EAChB;MAAA;MAAA;MAAA;QAAA;UAAA;YACQK,GAAG,GAAG,CAACD,IAAI,CAAC,CAACE,IAAI,EAAE,CAACC,GAAG,CAAC;cAAA,IAAGC,EAAE,SAAFA,EAAE;cAAA,OAAOA,EAAE;YAAA,EAAC;YACvCC,MAAM,uBAAMN,IAAI,EAAGE,GAAG;YAAA;YAAA,OAEtBT,0DAAuB,CAACa,MAAM,CAAC;UAAA;YAAA,iEAEzBV,YAAY,2BAAII,IAAI,EAAG,uBAACJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAGI,IAAI,CAAC,mEAAI,EAAE,EAAEC,IAAI,CAAC,CAACE,IAAI,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAC7E,IACD;MACEK,cAAc,EAAE,wBAACC,IAAI;QAAA;QAAA,uCAAWA,IAAI,2BAAIT,IAAI,EAAG,eAACS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAGT,IAAI,CAAC,mDAAI,EAAE,EAAEC,IAAI,CAAC,CAACE,IAAI,EAAE;MAAA,CAAG;MACnFO,aAAa,EAAE,IAAI;MACnBC,eAAe,EAAE;IACnB,CAAC,CACF;EACH,CAAC,EACD,CAACd,kBAAkB,EAAED,YAAY,CAAC,CACnC;EAED,OAAOJ,0CAAa,CAAC;IAAA,OAAO;MAAEM,SAAS,EAATA;IAAU,CAAC;EAAA,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;AAC1D,CAAC","sources":["webpack://gravity-web/./src/subscription/useSubscribe.ts"],"sourcesContent":["import React from 'react';\nimport { SubscriptionApis } from './apis';\nimport { UpdateSubscriptionPayload } from './types';\nimport { useSubscription } from './useSubscription';\n\nexport const useSubscribe = <T extends { id: number; name: string }>() => {\n  const { subscription, mutateSubscription } = useSubscription();\n\n  const subscribe = React.useCallback(\n    (type: keyof UpdateSubscriptionPayload, item: T | T[]) => {\n      mutateSubscription(\n        async () => {\n          const ids = [item].flat().map(({ id }) => id);\n          const params = { [type]: ids };\n\n          await SubscriptionApis.update(params);\n\n          return { ...subscription!, [type]: [subscription?.[type] ?? [], item].flat() };\n        },\n        {\n          optimisticData: (prev) => ({ ...prev!, [type]: [prev?.[type] ?? [], item].flat() }),\n          populateCache: true,\n          rollbackOnError: true,\n        },\n      );\n    },\n    [mutateSubscription, subscription],\n  );\n\n  return React.useMemo(() => ({ subscribe }), [subscribe]);\n};\n"],"names":["React","SubscriptionApis","useSubscription","useSubscribe","subscription","mutateSubscription","subscribe","useCallback","type","item","ids","flat","map","id","params","update","optimisticData","prev","populateCache","rollbackOnError","useMemo"],"sourceRoot":""}