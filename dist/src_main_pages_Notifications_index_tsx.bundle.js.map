{"version":3,"file":"src_main_pages_Notifications_index_tsx.bundle.js","mappings":"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","sources":["webpack://gravity-web/./src/common/atoms/InfiniteScroller/index.tsx","webpack://gravity-web/./src/main/atoms/ListEndComponent/index.tsx","webpack://gravity-web/./src/main/molecules/NotificationItem/index.tsx","webpack://gravity-web/./src/main/organisms/NotificationList/index.tsx","webpack://gravity-web/./src/main/pages/Notifications/index.tsx"],"sourcesContent":["import React, { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { useDebounce, useEventListener, useIntersection } from '@/common/hooks';\nimport { ScrollToTopButton } from '@/main/molecules';\nimport { Children } from '@/common/types';\n\nconst DEFAULT_THRESHOLD = 150;\n\ninterface InfiniteScrollerProps extends Children {\n  style?: React.CSSProperties;\n  className?: string;\n  threshold?: number;\n  onLoadMore?: () => void;\n  isLoading?: boolean;\n  LoadingComponent?: ReactNode;\n}\n\nconst InfiniteScroller: React.FC<InfiniteScrollerProps> = ({\n  children,\n  style,\n  className,\n  threshold,\n  onLoadMore,\n  isLoading,\n  LoadingComponent,\n}) => {\n  const scrollerRef = useRef<HTMLDivElement>(null);\n  const endAnchorRef = useRef<HTMLDivElement>(null);\n  const [showScrollTop, setShowScrollTop] = useState<boolean>(false);\n  const isEndReached = useIntersection(endAnchorRef.current || undefined, `${threshold}px`); // Trigger if 200px is visible from the element\n  const loadMoreFunc = onLoadMore || (() => undefined);\n  const handleLoadMoreTrigger = useDebounce(loadMoreFunc);\n  const handleScroll = useCallback(() => {\n    const winScroll = scrollerRef.current?.scrollTop ?? 0;\n    const scrollDistance =\n      (scrollerRef.current?.scrollHeight ?? 0) - (scrollerRef.current?.clientHeight ?? 0);\n    if (scrollDistance - winScroll < (threshold ?? DEFAULT_THRESHOLD)) {\n      handleLoadMoreTrigger();\n    }\n    if (winScroll > window.innerHeight) {\n      setShowScrollTop(true);\n    } else {\n      setShowScrollTop(false);\n    }\n  }, [threshold, handleLoadMoreTrigger]);\n\n  useEventListener('scroll', handleScroll, scrollerRef.current || window);\n  const scrollToTop = () => {\n    scrollerRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    // In case list doesn't trigger scroller at the first load\n    if (isEndReached) {\n      handleLoadMoreTrigger();\n    }\n  }, [handleLoadMoreTrigger, isEndReached]);\n\n  return (\n    <>\n      <div ref={scrollerRef} className={className} style={style}>\n        {children}\n        {isLoading && LoadingComponent}\n      </div>\n      <ScrollToTopButton onClick={scrollToTop} visible={showScrollTop} />\n      <div ref={endAnchorRef} id=\"end-anchor\" className=\"sr-only\" />\n    </>\n  );\n};\n\nInfiniteScroller.defaultProps = {\n  threshold: DEFAULT_THRESHOLD,\n  style: undefined,\n  className: '',\n  isLoading: false,\n  LoadingComponent: null,\n  onLoadMore: () => undefined,\n};\n\nexport default InfiniteScroller;\n","import React from 'react';\n\ninterface ListEndComponentProps {\n  message?: string;\n}\n\nconst ListEndComponent: React.FC<ListEndComponentProps> = ({ message }) => {\n  return (\n    <>\n      <p className=\"text-base text-center text-Neutral-4 mt-3 sm:mt-8\">\n        {message || \"That's all for now.\"}\n        <span role=\"img\" aria-label=\"rocket\">\n          {' '}\n          🚀\n        </span>\n      </p>\n    </>\n  );\n};\n\nListEndComponent.defaultProps = {\n  message: '',\n};\n\nexport default ListEndComponent;\n","import { Avatar, Button } from '@/common/components';\nimport { distanceToNow } from '@/common/utils';\nimport { CommentText } from '@/feed/CommentText';\nimport { Notification, NotifyStatus } from '@/main/entity';\nimport { getColorByText, getNameAbbreviation } from '@/main/utils';\nimport { identifyMixPanelUserProfile } from '@/mixpanel/useMixPanel';\nimport { useProfile } from '@/profile/useProfile';\nimport clsx from 'clsx';\nimport mixpanel from 'mixpanel-browser';\nimport React from 'react';\n\nexport interface NotificationItemProps {\n  item: Notification;\n  index?: number;\n  style?: React.CSSProperties;\n  onClick: (item: Notification) => void;\n}\n\nconst NotificationItem: React.FC<NotificationItemProps> = ({ item, onClick }) => {\n  const avatarBgColor = React.useMemo(() => getColorByText(item?.content ?? ''), [item?.content]);\n  const isNew = item.status === NotifyStatus.UNREAD;\n  const { profile } = useProfile();\n\n  const renderAvatarOrShortname = () => {\n    const shortName = getNameAbbreviation(item?.causedByUser?.fullName);\n    const isHaveAvatar = item?.causedByUser?.avatar;\n    return (\n      <div\n        className=\"flex flex-row justify-center items-center w-10 h-10 rounded-full\"\n        style={{ backgroundColor: avatarBgColor }}\n      >\n        {isHaveAvatar && (\n          <Avatar size=\"lg\" fullName={item.causedByUser.fullName as string} src={isHaveAvatar} />\n        )}\n        {!isHaveAvatar && <p className=\"text-sm font-bold text-white\">{shortName}</p>}\n      </div>\n    );\n  };\n\n  return (\n    <Button\n      onClick={() => {\n        onClick(item);\n\n        mixpanel.track('Notification Click', {\n          user_id: profile?.id,\n          email: profile?.email,\n          company_id: profile?.company?.id,\n        });\n        identifyMixPanelUserProfile(profile);\n      }}\n      className={clsx(\n        'flex flex-row min-h-16 pl-3 pr-5 py-4 w-full',\n        isNew ? 'bg-white' : 'bg-Gray-18',\n      )}\n    >\n      <div className=\"flex flex-row items-center\">\n        <div\n          className={clsx(\n            'flex self-center w-1.5 h-1.5 rounded-full mr-1.5',\n            isNew ? 'bg-system-success' : 'bg-transparent',\n          )}\n        />\n        {renderAvatarOrShortname()}\n      </div>\n      <CommentText\n        content={item.content}\n        className=\"text-left leading-6 break-words ml-4 !whitespace-normal\"\n      />\n      <div className=\"flex w-40 ml-auto\">\n        <div className=\"flex text-Gray-6 font-regular ml-auto text-right text-xs\">\n          {distanceToNow(item?.createdAt)}\n        </div>\n      </div>\n    </Button>\n  );\n};\n\nexport default NotificationItem;\n","import React, { CSSProperties, useEffect } from 'react';\nimport NotificationItem from '@/main/molecules/NotificationItem';\nimport { Notification } from '@/main/entity';\nimport ListLoading from '@/main/atoms/ListLoading';\nimport ListEndComponent from '@/main/atoms/ListEndComponent';\n\nimport mixpanel from 'mixpanel-browser';\nimport { useProfile } from '@/profile/useProfile';\nimport InfiniteScroller from '@/common/atoms/InfiniteScroller';\nimport { identifyMixPanelUserProfile } from '@/mixpanel/useMixPanel';\nimport { useMountEffect } from '@/common/hooks';\n\ninterface NotificationListProps {\n  style?: CSSProperties;\n  notifications: Notification[];\n  isLoading?: boolean;\n  hasMore?: boolean;\n  onLoadMore?: () => void;\n  onClickNotification: (item: Notification) => void;\n}\n\nconst NotificationList: React.FC<NotificationListProps> = ({\n  style,\n  notifications,\n  isLoading,\n  onLoadMore,\n  onClickNotification,\n  hasMore,\n}) => {\n  const { profile } = useProfile();\n\n  useMountEffect(() => {\n    mixpanel.track('Notifications View', {\n      user_id: profile?.id,\n      email: profile?.email,\n      company_id: profile?.company?.id,\n    });\n    identifyMixPanelUserProfile(profile);\n  });\n\n  const renderEmptyList = () => (\n    <div className=\"pb-5 text-center\">\n      <svg\n        className=\"mx-auto h-8 w-8 text-gray-400\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n        aria-hidden=\"true\"\n      >\n        <path\n          vectorEffect=\"non-scaling-stroke\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n        />\n      </svg>\n      <h3 className=\"mt-2 text-sm text-Gray-3\">No notifications</h3>\n    </div>\n  );\n\n  return (\n    <InfiniteScroller\n      className=\"pb-2 mr-0.5\"\n      style={{ ...style }}\n      onLoadMore={onLoadMore}\n      isLoading={isLoading}\n      LoadingComponent={<ListLoading />}\n    >\n      <ul className=\"pb-5 space-y-0.5\">\n        {notifications.map((item) => (\n          <NotificationItem key={item.id} item={item} onClick={onClickNotification} />\n        ))}\n      </ul>\n      {!isLoading && !notifications.length && renderEmptyList()}\n      {!isLoading && notifications.length > 0 && !hasMore && <ListEndComponent />}\n    </InfiniteScroller>\n  );\n};\n\nexport default NotificationList;\n","import { MainLayout } from '@/layout/MainLayout';\nimport { Notification } from '@/main/entity';\nimport { useNotification } from '@/main/hooks';\nimport { NotificationApis } from '@/notification/apis';\nimport { PaginationParams } from '@/rest/types';\nimport { Routes } from '@/routing/routes';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport NotificationList from '../../organisms/NotificationList';\n\nconst LIMIT_GET_NOTIFICATIONS = 30;\n\nconst INIT_PAGINATION = Object.freeze({\n  offset: 0,\n  limit: LIMIT_GET_NOTIFICATIONS,\n});\n\nexport const NotificationsPage = () => {\n  const [filter, setFilter] = React.useState<PaginationParams>(INIT_PAGINATION);\n  const { notifications, isLoading, hasMore, patchNotification } = useNotification(filter);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    NotificationApis.markAllAsRead();\n  }, []);\n\n  const handleLoadMore = React.useCallback(() => {\n    if (!hasMore || isLoading) return;\n    setFilter((prevFilter) => ({\n      limit: prevFilter?.limit ?? 0,\n      offset: (prevFilter?.offset ?? 0) + (prevFilter?.limit ?? 0),\n    }));\n  }, [hasMore, isLoading]);\n\n  const onClickNotification = async (item: Notification) => {\n    history.push(`${(Routes.Feed.path as string).replace(':id', `${item.data?.itemId}`)}`);\n    patchNotification(item?.id);\n  };\n\n  return (\n    <MainLayout>\n      <h1 className=\"sr-only\">Notifications feed</h1>\n      <div className=\"flex items-center space-x-4 pb-6\">\n        <h1 className=\"text-Gray-3 text-xl font-semibold ml-4 sm:ml-0\">Notifications</h1>\n      </div>\n      <NotificationList\n        notifications={notifications}\n        isLoading={isLoading}\n        onLoadMore={handleLoadMore}\n        onClickNotification={onClickNotification}\n        hasMore={hasMore}\n      />\n    </MainLayout>\n  );\n};\n"],"names":["React","useCallback","useEffect","useRef","useState","useDebounce","useEventListener","useIntersection","ScrollToTopButton","DEFAULT_THRESHOLD","InfiniteScroller","children","style","className","threshold","onLoadMore","isLoading","LoadingComponent","scrollerRef","endAnchorRef","showScrollTop","setShowScrollTop","isEndReached","current","undefined","loadMoreFunc","handleLoadMoreTrigger","handleScroll","winScroll","scrollTop","scrollDistance","scrollHeight","clientHeight","window","innerHeight","scrollToTop","scrollTo","top","behavior","defaultProps","ListEndComponent","message","Avatar","Button","distanceToNow","CommentText","NotifyStatus","getColorByText","getNameAbbreviation","identifyMixPanelUserProfile","useProfile","clsx","mixpanel","NotificationItem","item","onClick","avatarBgColor","useMemo","content","isNew","status","UNREAD","profile","renderAvatarOrShortname","shortName","causedByUser","fullName","isHaveAvatar","avatar","backgroundColor","track","user_id","id","email","company_id","company","createdAt","ListLoading","useMountEffect","NotificationList","notifications","onClickNotification","hasMore","renderEmptyList","map","length","MainLayout","useNotification","NotificationApis","Routes","useHistory","LIMIT_GET_NOTIFICATIONS","INIT_PAGINATION","Object","freeze","offset","limit","NotificationsPage","filter","setFilter","patchNotification","history","markAllAsRead","handleLoadMore","prevFilter","push","Feed","path","replace","data","itemId"],"sourceRoot":""}